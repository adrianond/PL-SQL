CREATE OR REPLACE PACKAGE BODY PCK_PROPOSTA_CREDITO IS

PROCEDURE PRC_CRIA_PROPOSTA(P_PROPOSTA IN PROPOSTA_CREDITO_TYPE) IS

V_PROPOSTA_TYPE PROPOSTA_CREDITO_TYPE:= P_PROPOSTA;
V_SEQ_ENDERECO ENDERECO_PROPOSTA_CREDITO.ID%TYPE;
V_SEQ_CLIENTE CLIENTE_PROPOSTA_CREDITO.ID%TYPE;
V_SQL_CODE  NUMBER; 
V_SQL_ERROR VARCHAR2(2000);

ENDERECO_EXCEPTION EXCEPTION;

BEGIN
 DBMS_OUTPUT.PUT_LINE('CRIA PROPOSTA CREDITO');

 SELECT SEQ_ENDERECO_PROPOSTA_CREDITO.NEXTVAL INTO V_SEQ_ENDERECO FROM DUAL;
 V_PROPOSTA_TYPE.CLIENTE.ENDERECO.ID := V_SEQ_ENDERECO;
 
 SELECT SEQ_CLIENTE_PROPOSTA_CREDITO.NEXTVAL INTO V_SEQ_CLIENTE FROM DUAL;
 V_PROPOSTA_TYPE.CLIENTE.ID := V_SEQ_CLIENTE;

 PRC_POPULA_ENDERECO(V_PROPOSTA_TYPE.CLIENTE.ENDERECO);
 PRC_POPULA_CLIENTE(V_PROPOSTA_TYPE.CLIENTE, V_SQL_CODE, V_SQL_ERROR);
 PRC_POPULA_TELEFONE(V_PROPOSTA_TYPE.CLIENTE.TELEFONES, V_SEQ_CLIENTE, V_SQL_CODE, V_SQL_ERROR);
 PRC_POPULA_PROPOSTA(V_PROPOSTA_TYPE, V_SQL_CODE, V_SQL_ERROR);
 
 COMMIT;
 
  EXCEPTION WHEN ENDERECO_EXCEPTION THEN
    PRC_LOG_ERROR('PCK_PROPOSTA_CREDITO', 'PRC_CRIA_PROPOSTA', 'ERRO AO INSERIR ENDEREÇO DO CLIENTE');
    DBMS_OUTPUT.PUT_LINE('ERRO AO REALIZAR O INSERT NA TABELA DE ENREDEÇO');
    ROLLBACK;
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('SQL CODE: ' || V_SQL_CODE || 'SQLERROR: ' || V_SQL_ERROR);
    
    PRC_LOG_ERROR('PCK_PROPOSTA_CREDITO', 'PRC_CRIA_PROPOSTA', 'SQL CODE: ' || V_SQL_CODE || 'ERROR: ' || V_SQL_ERROR);
    RAISE_APPLICATION_ERROR(-20002, 'ERRO AO INSERIR DADOS DA PROPOSTA' || SQLCODE || SQLERRM);
    ROLLBACK;
 
END PRC_CRIA_PROPOSTA;

PROCEDURE PRC_POPULA_ENDERECO(P_ENDERECO IN ENDERECO_PROPOSTA_CREDITO_TYPE) IS

ENDERECO_EXCEPTION EXCEPTION;
V_SQL_CODE NUMBER; 
V_SQL_ERROR VARCHAR2(2000);

BEGIN
 DBMS_OUTPUT.PUT_LINE('POPULA ENDEREÇO');
 
 INSERT INTO ENDERECO_PROPOSTA_CREDITO(
   ID,
   ENDERECO,
   NUMERO,
   COMPLEMENTO,
   CEP,
   BAIRRO,
   CIDADE,
   UF
 )
 values(
   P_ENDERECO.ID, 
   P_ENDERECO.ENDERECO, 
   P_ENDERECO.NUMERO, 
   P_ENDERECO.COMPLEMENTO, 
   P_ENDERECO.CEP, 
   P_ENDERECO.BAIRRO, 
   P_ENDERECO.CIDADE, 
   P_ENDERECO.UF
   );
   
 EXCEPTION WHEN OTHERS THEN
  V_SQL_CODE:= SQLCODE;
  V_SQL_ERROR:= SQLERRM;
  
  PRC_LOG_ERROR('PCK_PROPOSTA_CREDITO', 'PRC_POPULA_ENDERECO', 'SQL CODE: ' || V_SQL_CODE || 'ERROR: ' || V_SQL_ERROR);
  RAISE ENDERECO_EXCEPTION;
 
END PRC_POPULA_ENDERECO;

PROCEDURE PRC_POPULA_CLIENTE(P_CLIENTE IN CLIENTE_PROPOSTA_CREDITO_TYPE, V_SQL_CODE OUT NUMBER, V_SQL_ERROR OUT VARCHAR2) IS

BEGIN
DBMS_OUTPUT.PUT_LINE('POPULA CLIENTE');

INSERT INTO CLIENTE_PROPOSTA_CREDITO(
  ID,
  NOME,
  CPF,
  RG,
  DATA_NASCIMENTO,
  id_endereco
  ) VALUES (
  P_CLIENTE.ID,
  P_CLIENTE.NOME,
  P_CLIENTE.CPF,
  P_CLIENTE.RG,
  P_CLIENTE.DATANASCIMENTO,
  P_CLIENTE.ENDERECO.ID
  );
  
  EXCEPTION WHEN OTHERS THEN
  V_SQL_CODE:= SQLCODE;
  V_SQL_ERROR:= SQLERRM;
  
  PRC_LOG_ERROR('PCK_PROPOSTA_CREDITO', 'PRC_POPULA_CLIENTE', 'SQL CODE: ' || V_SQL_CODE || 'ERROR: ' || V_SQL_ERROR);
  RAISE_APPLICATION_ERROR(-20002, 'ERRO AO INSERIR OS DADOS DO CLIENTE' || SQLCODE || SQLERRM);

END PRC_POPULA_CLIENTE;

PROCEDURE PRC_POPULA_TELEFONE(P_TELEFONES IN TELEFONE_PROPOSTA_CREDITO_TYPE_TABLE, ID_CLIENTE IN NUMBER, V_SQL_CODE OUT NUMBER, V_SQL_ERROR OUT VARCHAR2) IS

V_SEQ_TELEFONE NUMBER;

BEGIN
DBMS_OUTPUT.PUT_LINE('POPULA TELEFONES');

 FOR I IN 1 .. P_TELEFONES.COUNT LOOP
   DBMS_OUTPUT.PUT_LINE('telefone: ' || P_TELEFONES(I).NUMERO);
   SELECT SEQ_TELEFONE_PROPOSTA_CREDITO.NEXTVAL INTO V_SEQ_TELEFONE FROM DUAL;
   
   INSERT INTO TELEFONE_PROPOSTA_CREDITO(
    ID,
    TIPO,
    NUMERO,
    DDD,
    ID_CLIENTE
   ) VALUES (
   V_SEQ_TELEFONE,
   P_TELEFONES(I).TIPO,
   P_TELEFONES(I).NUMERO,
   P_TELEFONES(I).DDD,
   ID_CLIENTE
   );
 END LOOP;
 
 EXCEPTION WHEN OTHERS THEN
  V_SQL_CODE:= SQLCODE;
  V_SQL_ERROR:= SQLERRM;
  
  PRC_LOG_ERROR('PCK_PROPOSTA_CREDITO', 'PRC_POPULA_TELEFONE', 'SQL CODE: ' || V_SQL_CODE || 'ERROR: ' || V_SQL_ERROR);
  RAISE_APPLICATION_ERROR(-20002, 'ERRO AO INSERIR TELEFONES' || SQLCODE || SQLERRM);

END PRC_POPULA_TELEFONE;

PROCEDURE PRC_POPULA_PROPOSTA(P_PROPOSTA IN PROPOSTA_CREDITO_TYPE, V_SQL_CODE OUT NUMBER, V_SQL_ERROR OUT VARCHAR2) IS

V_SEQ_PROPOSTA NUMBER;

BEGIN
DBMS_OUTPUT.PUT_LINE('POPULA PROPOSTA');

  SELECT SEQ_PROPOSTA_CREDITO.NEXTVAL INTO V_SEQ_PROPOSTA FROM DUAL;
  INSERT INTO PROPOSTA_CREDITO(
   ID,
   PRODUTO,
   VALOR,
   STATUS,
   ID_CLIENTE
  ) VALUES (
   V_SEQ_PROPOSTA,
   P_PROPOSTA.PRODUTO,
   P_PROPOSTA.VALOR,
   P_PROPOSTA.STATUS,
   P_PROPOSTA.CLIENTE.ID
  );

  EXCEPTION WHEN OTHERS THEN
  V_SQL_CODE:= SQLCODE;
  V_SQL_ERROR:= SQLERRM;
  
  PRC_LOG_ERROR('PCK_PROPOSTA_CREDITO', 'PRC_POPULA_PROPOSTA', 'SQL CODE: ' || V_SQL_CODE || 'ERROR: ' || V_SQL_ERROR);
  RAISE_APPLICATION_ERROR(-20002, 'ERRO AO POPULAR TABELA PROPOSTA_CREDITO' || SQLCODE || SQLERRM);

END PRC_POPULA_PROPOSTA;

END PCK_PROPOSTA_CREDITO;